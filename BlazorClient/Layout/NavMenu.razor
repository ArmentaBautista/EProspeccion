@inject SweetAlertService Swal
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid" align="justify">
        <a class="navbar-brand" href="">Prospección</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
	    <div class="nav-item px-3">
		    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
			    <span class="bi bi-house-door-fill-nav-menu" style="align-content:center" aria-hidden="true"></span> Inicio
		    </NavLink>
	    </div>
		
	    <div>
            <AuthorizeView>
	            <Authorized>
					
		            <div class="alert-danger" style="opacity:70%">
						<NavLink class="navbar-text text-white">
				            <span style="color:darkblue">
								@context.User.Identity!.Name
				            </span> 
			            </NavLink>
		            </div>


		            <div class="nav-item px-3">
			            <NavLink class="nav-link" href="Personas">
				            <span class="bi bi-people-fill" aria-hidden="true"></span> Personas
			            </NavLink>
		            </div>
		            <div class="nav-item px-3">
			            <NavLink class="nav-link" href="Prospectar">
				            <span class="bi bi-book-fill" aria-hidden="true"></span> Prospectar
			            </NavLink>
		            </div>
		            <button class="btn btn-dark" @onclick="CerrarSesion" style="width=100%">
			            <i class="bi bi-door-open me-1"></i>Salir
		            </button>
	            </Authorized>

                <NotAuthorized>
                    <NavLink class="btn btn-dark" href="usuarios/login"><i class="bi bi-box-arrow-in-right me-1"></i>Ingresar</NavLink>
                    <NavLink class="btn btn-dark" href="usuarios/register"><i class="bi bi-person-add me-1"></i>Registrarse</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task CerrarSesion()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions()
            {
                Title = "Desea salir?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                ConfirmButtonText = "Sí",
                CancelButtonText = "Por ahora no"
            });

        if (result.IsConfirmed)
        {
            var auth = (AuthenticationService)AuthenticationStateProvider;
            await auth.Authenticate(null);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }
}
